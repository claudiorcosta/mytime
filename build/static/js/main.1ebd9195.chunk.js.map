{"version":3,"sources":["config/GlobalStyles.js","Components/Header.js","services/firebase/useAuth.js","services/firebase/useTasks.js","config/firebase.js","Components/LoginForm.js","Views/Login.js","Views/MainMenu.js","Views/MyTasks.js","Views/MyMind.js","Views/TasksDone.js","Components/AddTaskForm.js","Views/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyles","createGlobalStyle","Header","props","user","signOut","useState","currentLocation","setCurrentLocation","location","useLocation","useEffect","pathname","StyledWrapper","styled","div","h6","displayName","onClick","useAuth","fbAuth","isAuthenticated","setIsAuthenticated","setUser","googleProvider","GoogleAuthProvider","facebookProvider","FacebookAuthProvider","onAuthStateChanged","createEmailUser","email","password","createUserWithEmailAndPassword","signInEmailUser","signInWithEmailAndPassword","signInWithProvider","provider","signInWithRedirect","Error","useTasks","fstore","ref","collection","createTask","task","add","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","LoginForm","loginFormSchema","yup","shape","required","displayEmail","onSubmit","buttonText","onProviderSignIn","useForm","resolver","yupResolver","handleSubmit","register","StyledSocialIconArea","errors","button","Link","label","Fragment","Button","handleClick","text","network","Login","serverErrorMessage","setServerErrorMessage","handleEmailSubmit","data","a","message","onEmailSubmit","MainMenu","StyledButton","db","firebase","firestore","countUnfinished","setCountUnifinished","countFinished","setCountFinished","where","onSnapshot","snapshot","size","fetchData","render","history","push","StyledLabel","StyledInput","input","StyledTextArea","textarea","StyleTable","table","MyTasks","tasks","setTasks","detailsShown","setDetailShown","docs","map","doc","id","toFixed","c","border","name","taskName","shownState","slice","index","indexOf","splice","toggleShown","includes","type","value","endDate","description","status","update","then","console","log","catch","error","delete","goBack","MyMind","step1","step2","step3","TasksDone","StyledForm","form","allTasks","setAllTasks","get","readTasks","forEach","getAllTasks","AddTaskForm","addTaskFormSchema","StyledErrorLabel","StyledTR","tr","AddTask","useHistory","addt","userId","uid","userEmail","userName","Protected","authenticated","children","rest","to","state","from","App","apps","length","initializeApp","auth","signInWithEmail","e","setMenuOpen","menuOpen","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1ebd9195.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n\r\nbody {\r\n  font-family: Quicksand;\r\n  text-align: center;\r\n  background: linear-gradient(180deg, #2980B9 0%, #FFFFFF 78.12%);\r\n    justify-content: center;\r\n    min-height: 100vh;\r\n    min-width: 100vw;\r\n}\r\n\r\nh1 {\r\n  font-size: 52px; \r\n  color: black;\r\n  font-family: OCR A Std, monospace;\r\n    font-style: normal;\r\n}\r\n\r\nh2 {\r\n  font-size: 32px;\r\n}\r\n\r\nh3 {\r\n  color: black;\r\n  font-family: OCR A Std, monospace;\r\n    font-style: normal;\r\n    font-size: 28px;\r\n}\r\n\r\n  a:hover {\r\n      \r\n    text-decoration: underline;\r\n  }\r\n  \r\n  a:active {\r\n    color: black;\r\n  }\r\n\r\ninput, textarea{\r\n    font-size: 19px;\r\nwidth: 285px;\r\nheight: 35px;\r\nright: 38px;\r\ntop: 213px;\r\nbackground: #FFFFFF;\r\nborder: 1px solid #000000;\r\nbox-sizing: border-box;\r\nborder-radius: 7px;\r\n}\r\n\r\nbutton:hover{\r\n    background: #3cb0fd;\r\n}\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n  const { user, signOut } = props;\r\n  const [currentLocation, setCurrentLocation] = useState(\"\");\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n\r\n    setCurrentLocation(location.pathname);\r\n\r\n  }, [location])\r\n\r\n\r\n  const handleSignOutClick = () => {\r\n    signOut();\r\n  }\r\n\r\n  const StyledWrapper = styled.div`\r\n  width: 100%;\r\n  text-align: right;\r\n  `;\r\n\r\n  const styleH6 = styled.h6`\r\n      cursor: pointer;\r\n  `;\r\n\r\n  return (\r\n    <div>\r\n\r\n      <StyledWrapper>\r\n        {currentLocation !== \"/login\" && currentLocation !== \"/register\" &&\r\n          <styleH6> {user.displayName}  (<a onClick={handleSignOutClick}> Log Out </a>)</styleH6>\r\n        }\r\n      </StyledWrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Header;","import { useState} from \"react\";\r\n\r\n    const useAuth =(fbAuth) => {\r\n\r\n   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n   const [user, setUser] = useState({});\r\n   const createEmailUser = (email, password) => fbAuth().createUserWithEmailAndPassword(email, password);\r\n   const signInEmailUser = (email, password) => fbAuth().signInWithEmailAndPassword(email, password);\r\n   const signOut =() => fbAuth().signOut();\r\n   const googleProvider = new fbAuth.GoogleAuthProvider();\r\n   const facebookProvider = new fbAuth.FacebookAuthProvider();\r\n  \r\n  \r\n   fbAuth().onAuthStateChanged(user=> {\r\n       if(user){\r\n           setIsAuthenticated(true);\r\n           setUser(user);\r\n           return\r\n       }\r\n       setIsAuthenticated(false);\r\n   });\r\n\r\n   const signInWithProvider = (provider) => {\r\n       switch (provider){\r\n           case \"google\":\r\n                fbAuth().signInWithRedirect(googleProvider);\r\n                break;\r\n            case \"facebook\":\r\n                fbAuth().signInWithRedirect(facebookProvider);\r\n                break;\r\n            \r\n                default:\r\n                    throw new Error(\"unsupported provider\")\r\n       }\r\n   }\r\n   return {isAuthenticated, createEmailUser, signInEmailUser,user, signOut, signInWithProvider};\r\n   \r\n    }\r\n\r\nexport default useAuth;","\r\nfunction useTasks(fstore){\r\n    \r\n    const ref = fstore().collection('tasks');\r\n    const createTask = (task) => ref.add(task);\r\n    \r\n    return {createTask};\r\n}\r\n\r\nexport default useTasks;","const firebaseConfig = {\r\n    apiKey: \"AIzaSyA6bpWNBTUeLkT9WQBrElZc0mMCKZQeZts\",\r\n    authDomain: \"mytime-ab241.firebaseapp.com\",\r\n    databaseURL: \"https://mytime-ab241.firebaseio.com\",\r\n    projectId: \"mytime-ab241\",\r\n    storageBucket: \"mytime-ab241.appspot.com\",\r\n    messagingSenderId: \"530212951282\",\r\n    appId: \"1:530212951282:web:7e6a2d429b25bb25f1ec6b\"\r\n};\r\n\r\nexport default firebaseConfig;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\n\r\nfunction LoginForm(props) {\r\n    const loginFormSchema = yup.object().shape({\r\n        email: yup.string().email('Email is not valid').required('Please enter an email'),\r\n        password: yup.string().required('Password is required')\r\n    })\r\n\r\n    const[displayEmail, setDisplayEmail] = useState(true);\r\n    const { buttonText, onSubmit, onProviderSignIn } = props;\r\n    const { register, handleSubmit, errors } = useForm({resolver: yupResolver(loginFormSchema)});\r\n    const onInternalSubmit = data => onSubmit(data);\r\n\r\n    const StyledButton = styled.button`\r\n    background: #2980B9;\r\n\tborder-radius:8px;\r\n\tdisplay:inline-block;\r\n\tcursor:pointer;\r\n\tcolor:#ffffff;\r\n\tfont-family:Arial;\r\n\tfont-size:20px;\r\n\tfont-weight:bold;\r\n\ttext-decoration:none;\r\n    text-shadow:0px 1px 0px #1f1f1f;\r\n    width: 135px;\r\n    height: 37px;\r\n    \r\n    \r\n        `;\r\n            \r\n\r\n        const StyledLink = styled(Link)`\r\n        color: red;\r\n    font-family: helvetica;\r\n    text-decoration: none;\r\n        `;\r\n\r\n        const StyledErrorLabel = styled.label`\r\n        font-family: Arial, sans-serif;\r\n        color:red;\r\n        font-weight: bolder;\r\n        margin: 1% 0 4% 0;\r\n    `;\r\n    const StyledSocialIconArea = styled.div`\r\n    display: flex;\r\n    justify-content: center;   \r\n  `;\r\n  \r\n\r\n  return (\r\n    \r\n    <React.Fragment>\r\n         <h1>myTime</h1>\r\n    {!displayEmail && <Button onClick={handleClick} text=\"Email\" />}\r\n\r\n        { displayEmail && \r\n           ( <form onSubmit = {handleSubmit(onSubmit)}>\r\n               <h3>Here you will be able to manage all your tasks and find the steps that are known to help people to achieve a healthy mental health</h3>\r\n               <h3>Social Network Login:</h3>\r\n                    <StyledSocialIconArea>\r\n                <SocialIcon network=\"facebook\" onClick={() => onProviderSignIn(\"facebook\")} />\r\n                <SocialIcon network=\"google\" onClick={() => onProviderSignIn(\"google\")} />\r\n            </StyledSocialIconArea>\r\n            </form>)\r\n            \r\n}\r\n</React.Fragment>\r\n  );\r\n}\r\n\r\nexport default LoginForm;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Form from \"../Components/LoginForm\";\r\n\r\n\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-align: center;\r\n`;\r\n\r\nconst Login = (props) => {\r\n\r\n  const {signInEmailUser, signInWithProvider} = props;\r\n  const [serverErrorMessage, setServerErrorMessage] = useState('')\r\n\r\n  const handleEmailSubmit = async data => {\r\n    try {\r\n        const {email, password} = data;\r\n        await signInEmailUser(email,password);\r\n    } catch(e) {\r\n       setServerErrorMessage(e.message);\r\n    }\r\n  }\r\n\r\n\r\n    return (\r\n              \r\n                <Form\r\n                onEmailSubmit ={handleEmailSubmit}\r\n                serverErrorMessage = {serverErrorMessage}\r\n                onProviderSignIn = {(provider) => signInWithProvider(provider)}\r\n                    buttonText=\"LOGIN\"\r\n                >\r\n                  \r\n                </Form>\r\n           \r\n      \r\n    );\r\n}\r\n\r\nLogin.propTypes = {\r\n    signInEmailUser: PropTypes.func.isRequired,\r\n    signInWithProvider: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Login;","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Route } from \"react-router-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction MainMenu(props) {\r\n  const StyledButton = styled.button`\r\n    background: #2980B9;\r\n    border-radius:8px;\r\n    display:inline-block;\r\n    cursor:pointer;\r\n    color:#ffffff;\r\n    font-family:Arial;\r\n    font-size:20px;\r\n    font-weight:bold;\r\n    text-decoration:none;\r\n    text-shadow:0px 1px 0px #1f1f1f;\r\n    width: 280px;\r\n    height: 80px;\r\n        `;\r\n  const { user } = props;\r\n  const [tasks, setTasks] = useState([]);\r\n  const db = firebase.firestore();\r\n  const [countUnfinished, setCountUnifinished] = useState(0);\r\n  const [countFinished, setCountFinished] = useState(0);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      db.collection('tasks').where('status', '==', 'Unfinished').where('userEmail', '==', user.email)\r\n        .onSnapshot(snapshot => {\r\n          setCountUnifinished(snapshot.size);\r\n        }\r\n        );\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      db.collection('tasks').where('userEmail', '==', user.email)\r\n        .onSnapshot(snapshot => {\r\n          setCountFinished(snapshot.size);\r\n        }\r\n        );\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  return (\r\n\r\n    <React.Fragment>\r\n      <h1>myTime</h1>\r\n      <Route render={({ history }) => (\r\n        <StyledButton onClick={() => { history.push('/mytasks') }} > MyTasks({countUnfinished}/{countFinished})</StyledButton>\r\n      )} />\r\n      <Route render={({ history }) => (\r\n        <p>\r\n          <StyledButton onClick={() => { history.push('/mymind') }} > MyMind</StyledButton>\r\n        </p>\r\n      )} />\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default MainMenu;","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from \"firebase/app\";\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport styled from \"styled-components\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst StyledButton = styled.button`\r\n  background: #2980B9;\r\n  border-radius:8px;\r\n  display:inline-block;\r\n  cursor:pointer;\r\n  color:#ffffff;\r\n  font-family:Arial;\r\n  font-size:20px;\r\n  font-weight:bold;\r\n  text-decoration:none;\r\n  text-shadow:0px 1px 0px #1f1f1f;\r\n  width: 120px;\r\n  height: 47px;\r\n    `;\r\nconst StyledLabel = styled.label`\r\nfont-family: Quicksand;\r\nfont-size:25px;\r\nfont-weight: bolder;\r\n`;\r\nconst StyledInput = styled.input`\r\nwidth:300px;\r\n`;\r\nconst StyledTextArea = styled.textarea`\r\nwidth:300px;\r\nfont-family: Quicksand;\r\n`;\r\nconst StyleTable = styled.table`\r\nwidth: 35%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n\r\n`;\r\n\r\nfunction MyTasks(props) {\r\n  const { user } = props;\r\n  const [tasks, setTasks] = useState([]);\r\n  const db = firebase.firestore();\r\n  const [detailsShown, setDetailShown] = useState([]);\r\n  const [countUnfinished, setCountUnifinished] = useState(0);\r\n  const [countFinished, setCountFinished] = useState(0);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      db.collection('tasks').where('status', '==', 'Unfinished').where('userEmail', '==', user.email)\r\n        .onSnapshot(snapshot => {\r\n          setCountUnifinished(snapshot.size),\r\n            setTasks(\r\n              snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n\r\n              }))\r\n            )\r\n        }\r\n        );\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      db.collection('tasks').where('userEmail', '==', user.email)\r\n        .onSnapshot(snapshot => {\r\n          setCountFinished(snapshot.size);\r\n        }\r\n        );\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  const onDelete = (id) => {\r\n    db.collection('tasks').doc(id).delete()\r\n  }\r\n\r\n  const onUpdate = (id) => {\r\n    const docRef = db.collection('tasks').doc(id);\r\n    docRef.update({\r\n      status: 'Finished',\r\n    }).then(() => {\r\n      console.log('Task finished with success!');\r\n\r\n    }).catch((error) => {\r\n      console.log('Error finishing task:', error);\r\n    })\r\n  }\r\n\r\n  const toggleShown = taskName => {\r\n    const shownState = detailsShown.slice();\r\n    const index = shownState.indexOf(taskName);\r\n    if (index >= 0) {\r\n      shownState.splice(index, 1);\r\n      setDetailShown(shownState);\r\n    } else {\r\n      shownState.push(taskName);\r\n      setDetailShown(shownState);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1>myTime</h1>\r\n      <div >\r\n        <h2>You have to complete {((countUnfinished/countFinished)*100).toFixed(2)}% of your tasks</h2>\r\n      </div>\r\n      <StyleTable >\r\n        {tasks.map(c =>\r\n          <>\r\n            <tr key={c.id} border=\"4px\">\r\n              <td border=\"4px\"><StyledLabel>{(c.name)}</StyledLabel></td>\r\n              <td><StyledButton onClick={() => toggleShown(c.id)} > Details </StyledButton></td>\r\n            </tr>\r\n            {detailsShown.includes(c.id) && (\r\n              <>\r\n                <tr>\r\n                  <td><StyledLabel>Date to Finish</StyledLabel></td>\r\n                  <td ><StyledInput type=\"text\" name=\"enddate\" value={(c.endDate)} /></td>\r\n                </tr>\r\n                <tr>\r\n                  <td ><StyledLabel>Type</StyledLabel></td>\r\n                  <td ><StyledInput type=\"text\" name=\"type\" value={(c.type)} /></td>\r\n                </tr>\r\n                <tr>\r\n                  <td ><StyledLabel>Description</StyledLabel></td>\r\n                  <td ><StyledTextArea type=\"text\" name=\"description\" value={(c.description)} /></td>\r\n                </tr>\r\n                <tr>\r\n                  <td ><StyledLabel>Status</StyledLabel></td>\r\n                  <td ><StyledInput type=\"text\" name=\"status\" value={(c.status)} /></td>\r\n                </tr>\r\n                <tr>\r\n                  <td ><StyledButton onClick={() => onUpdate(c.id)}>Finished</StyledButton></td>\r\n                  <td><StyledButton onClick={() => onDelete(c.id)} >Delete</StyledButton></td>\r\n                </tr>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </StyleTable>\r\n      <StyleTable>\r\n        <tr>\r\n          <td><Route render={({ history }) => (\r\n            <StyledButton onClick={() => { history.push('/tasksdone') }} > Finished Tasks</StyledButton>\r\n          )} /></td>\r\n          <td><Route render={({ history }) => (\r\n            <p>\r\n              <StyledButton onClick={() => { history.push('/addtask') }} > Add Task </StyledButton>\r\n            </p>\r\n          )} /></td>\r\n          <td><Route render={({ history }) => (\r\n            <p>\r\n              <StyledButton onClick={() => { history.goBack() }}> Go Back </StyledButton>\r\n            </p>\r\n\r\n          )} /></td>\r\n        </tr>\r\n      </StyleTable>\r\n    </React.Fragment>\r\n\r\n  );\r\n};\r\n\r\n\r\nMyTasks.propTypes = {\r\n  tasks: PropTypes.array.isRequired,\r\n  readTasks: PropTypes.object.isRequired\r\n};\r\n\r\n\r\n\r\nexport default MyTasks;","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from \"firebase/app\";\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport styled from \"styled-components\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nfunction MyMind(props) {\r\n\r\nconst StyledButton = styled.button`\r\n    background: #2980B9;\r\n    border-radius:8px;\r\n    display:inline-block;\r\n    cursor:pointer;\r\n    color:#ffffff;\r\n    font-family:Arial;\r\n    font-size:20px;\r\n    font-weight:bold;\r\n    text-decoration:none;\r\n    text-shadow:0px 1px 0px #1f1f1f;\r\n    width: 120px;\r\n    height: 47px;\r\n      `;\r\n  const StyledLabel = styled.label`\r\n  font-family: Quicksand;\r\n  font-size:25px;\r\n  font-weight: bolder;\r\n  `;\r\n  const StyledInput = styled.input`\r\n  width:300px;\r\n  `;\r\n  const StyledTextArea = styled.textarea`\r\n  width:300px;\r\n  font-family: Quicksand;\r\n  `;\r\n  const StyleTable = styled.table`\r\n  width: 35%;\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n  \r\n  `;\r\n        \r\n        const { user } = props;\r\n        const [tasks, setTasks] = useState([]);\r\n        const db = firebase.firestore();\r\n        const [detailsShown, setDetailShown] = useState([]);\r\n      \r\n      \r\n        useEffect(() => {\r\n          const fetchData = async () => {\r\n            db.collection('mymind')\r\n              .onSnapshot(snapshot =>\r\n                setTasks(\r\n                  snapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n      \r\n                  }))\r\n                )\r\n              );\r\n          };\r\n          fetchData();\r\n        }, []);\r\n\r\n        const toggleShown = taskName => {\r\n            const shownState = detailsShown.slice();\r\n            const index = shownState.indexOf(taskName);\r\n            if (index >= 0) {\r\n              shownState.splice(index, 1);\r\n              setDetailShown(shownState);\r\n            } else {\r\n              shownState.push(taskName);\r\n              setDetailShown(shownState);\r\n            }\r\n          };\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <h1>myMind</h1>\r\n    <StyleTable >\r\n      {tasks.map(c =>\r\n       <>\r\n        <tr  key={c.id} border = \"4px\">\r\n          <td  border = \"4px\"><StyledLabel>{(c.id)}</StyledLabel></td>\r\n          <td><StyledButton onClick={() => toggleShown(c.id)} > Details </StyledButton></td>\r\n          </tr>\r\n          {detailsShown.includes(c.id) && (\r\n            <>\r\n          <tr>\r\n          <td><StyledLabel>{(c.step1)}</StyledLabel></td>\r\n            </tr>\r\n          <tr>\r\n          <td><StyledLabel>{(c.step2)}</StyledLabel></td>\r\n          </tr>\r\n          <tr>\r\n          <td><StyledLabel>{(c.step3)}</StyledLabel></td>\r\n          </tr>\r\n          <tr>\r\n           \r\n          </tr>\r\n       </>\r\n        )}\r\n        </>\r\n         )}\r\n         <Route render={({ history}) => (\r\n      <p>\r\n     <StyledButton onClick={() => { history.goBack()}} > Go Back </StyledButton>\r\n     </p>\r\n  )} /> \r\n      </StyleTable>\r\n  </React.Fragment>\r\n    \r\n   \r\n  );\r\n}\r\n\r\nexport default MyMind;","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from \"firebase/app\";\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Route } from \"react-router-dom\";\r\nimport GlobalStyles from \"../config/GlobalStyles\";\r\n\r\nfunction TasksDone(props) {\r\n\r\n  const StyledButton = styled.button`\r\n  background: #2980B9;\r\n  border-radius:8px;\r\n  display:inline-block;\r\n  cursor:pointer;\r\n  color:#ffffff;\r\n  font-family:Arial;\r\n  font-size:20px;\r\n  font-weight:bold;\r\n  text-decoration:none;\r\n  text-shadow:0px 1px 0px #1f1f1f;\r\n  width: 120px;\r\n  height: 47px;\r\n      `;\r\n  const StyledLink = styled(Link)`\r\n      color: red;\r\n  font-family: helvetica;\r\n  text-decoration: none;\r\n      `;\r\n  const StyledErrorLabel = styled.label`\r\n      font-family: Arial, sans-serif;\r\n      color:red;\r\n      font-weight: bolder;\r\n      margin: 1% 0 4% 0;\r\n  `;\r\n  const StyledSocialIconArea = styled.div`\r\n  display: flex;\r\n  justify-content: center;   \r\n  `;\r\n  const StyledLabel = styled.label`\r\n  font-family: Quicksand;\r\n  font-size:25px;\r\n  font-weight: bolder;\r\n  `;\r\n  const StyledForm = styled.form`\r\n  display: grid;\r\n  justify-content: center;\r\n  text-align: left;\r\n  `;\r\n  const StyledInput = styled.input`\r\n  width:200px;\r\n  `;\r\n\r\n  const {user } = props;\r\n  const [allTasks, setAllTasks] = useState([]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getAllTasks = async () => {\r\n      const db = firebase.firestore()\r\n      const readTasks = await db.collection('tasks').where('status', '==', 'Finished').where('userEmail', '==', user.email).get();\r\n      let tasks = [];\r\n      readTasks.forEach(c => tasks.push({ ...c.data(), ...{ id: c.id } }));\r\n        setAllTasks(tasks);\r\n      }\r\n    getAllTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1>myTime</h1>\r\n      <GlobalStyles />\r\n      <StyledForm >\r\n        <table>\r\n        <th><StyledLabel>Name</StyledLabel></th>\r\n        <th><StyledLabel>Date to Finish</StyledLabel></th>\r\n        <th><StyledLabel>Type</StyledLabel></th>\r\n        <th><StyledLabel>Description</StyledLabel></th>\r\n        <th><StyledLabel>Status</StyledLabel></th>\r\n          {allTasks.map(c =>\r\n            <tr >\r\n              <td><StyledLabel><StyledInput type=\"text\" name=\"name\" value={(c.name)} /></StyledLabel></td>\r\n              <td><StyledLabel><StyledInput type=\"text\" name=\"enddate\" value={(c.endDate)}/></StyledLabel></td>\r\n              <td><StyledLabel><StyledInput type=\"text\" name=\"type\" value={(c.type)}/></StyledLabel></td>\r\n              <td><StyledLabel><StyledInput type=\"text\" name=\"description\" value={(c.description)}/></StyledLabel></td>\r\n              <td><StyledLabel><StyledInput type=\"text\" name=\"status\" value={(c.status)}/></StyledLabel></td>\r\n            </tr>\r\n          )}\r\n          <tr>\r\n            <td></td>\r\n            <td><Route render={({ history }) => (\r\n          <StyledButton onClick={() => { history.push('/mytasks') }} > Unfinished Tasks</StyledButton>\r\n        )} /></td>\r\n            <td><Route render={({ history }) => (\r\n          <p>\r\n            <StyledButton onClick={() => { history.goBack() }}> Go Back </StyledButton>\r\n          </p>\r\n        )} /></td>\r\n          </tr>\r\n        </table>\r\n\r\n      </StyledForm>\r\n    </React.Fragment>\r\n\r\n  );\r\n};\r\nexport default TasksDone;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\n\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst AddTaskForm =props => {\r\n\r\n\r\n    const addTaskFormSchema = yup.object().shape({\r\n        name: yup.string().required('You must enter a name'),\r\n        endDate: yup.string().required('You must enter a date'),\r\n        type: yup.string().required('You must enter a type'),\r\n        description: yup.string().required('You must enter a description')\r\n    })\r\n\r\n\r\n    const { register, handleSubmit, errors } = useForm({ resolver: yupResolver(addTaskFormSchema) });\r\n    const { onSubmit } = props;\r\n\r\n    const StyledButton = styled.button`\r\n        background: #2980B9;\r\n        border-radius:8px;\r\n        display:inline-block;\r\n        cursor:pointer;\r\n        color:#ffffff;\r\n        font-family:Arial;\r\n        font-size:20px;\r\n        font-weight:bold;\r\n        text-decoration:none;\r\n        text-shadow:0px 1px 0px #1f1f1f;\r\n        width: 158px;\r\n        height: 47px;\r\n    `;\r\n\r\n    const StyledLabel = styled.label`\r\n        font-family: Quicksand;\r\n        font-size:25px;\r\n        font-weight: bolder;\r\n    `;\r\n\r\n    const StyledErrorLabel = styled.label`\r\n    font-family: Arial, sans-serif;\r\n    color:red;\r\n    font-weight: bolder;\r\n`;\r\n\r\n    const StyledTR = styled.tr`\r\n        text-align: left;\r\n    `;\r\n    const StyledSocialIconArea = styled.div`\r\n        display: flex;\r\n        justify-content: center;   \r\n  `;\r\n\r\n    const StyledForm = styled.form`\r\n  display: grid;\r\n  justify-content: center;\r\n  text-align: left;\r\n`;\r\n\r\n    const onFormSubmit = data => {\r\n        onSubmit({ ...data});\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <h1>myTasks</h1>\r\n            <StyledForm onSubmit={handleSubmit(onFormSubmit)}>\r\n\r\n                <table>\r\n                    <StyledTR>\r\n                        <td><StyledLabel>Name</StyledLabel></td>\r\n                        <td><input type=\"text\" name=\"name\" ref={register({ required: true })} /> </td>\r\n                    </StyledTR>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td><StyledErrorLabel>{errors.name && errors.name.message}</StyledErrorLabel></td>\r\n                    </tr>\r\n                    <StyledTR>\r\n                        <td><StyledLabel>Date to Finish</StyledLabel></td>\r\n                        <td><input type=\"date\" name=\"endDate\"  ref={register({ required: true })} /></td>\r\n                    </StyledTR>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td><StyledErrorLabel>{errors.endDate && errors.endDate.message}</StyledErrorLabel></td>\r\n                    </tr>\r\n                    <StyledTR>\r\n                        <td><StyledLabel>Type</StyledLabel></td>\r\n                        <td> <input type=\"text\" name=\"type\" ref={register({ required: true })} /> </td>\r\n                    </StyledTR>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td><StyledErrorLabel>{errors.type && errors.type.message}</StyledErrorLabel></td>\r\n                    </tr>\r\n                    <StyledTR>\r\n                        <td><StyledLabel>Description</StyledLabel></td>\r\n                        <td> <textarea type=\"text\" name=\"description\" ref={register({ required: true })} /> </td>\r\n                    </StyledTR>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td><StyledErrorLabel>{errors.description && errors.description.message}</StyledErrorLabel></td>\r\n                    </tr>\r\n      \r\n                        <td> <StyledButton  > Add Task </StyledButton></td>\r\n\r\n                        <Route render={({ history }) => (\r\n\r\n                            <StyledButton onClick={() => { history.goBack() }} > Go Back </StyledButton>\r\n\r\n                        )} />\r\n                    \r\n                </table>\r\n\r\n            </StyledForm>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AddTaskForm;","import React from \"react\";\r\nimport {useHistory } from \"react-router-dom\";\r\nimport AddTaskForm from \"../Components/AddTaskForm\";\r\n\r\nconst AddTask = props => {\r\n\r\n    const {user,createTask} = props;\r\n    const history = useHistory();\r\n    \r\n    const handleSubmit = async (task) => {\r\n        const addt = {\r\n            ...task, \r\n            ...{\r\n              userId: user.uid,\r\n                userEmail: user.email,\r\n                userName: user.displayName,\r\n                status: \"Unfinished\"\r\n              }\r\n        }\r\n        await createTask (addt);\r\n        history.push('/');\r\n        console.log(addt);\r\n    }\r\n\r\n\r\n\r\n\r\nreturn (\r\n    <>\r\n      <AddTaskForm onSubmit={handleSubmit}  />\r\n    </>\r\n  );\r\n};\r\n\r\nAddTask.propTypes = {};\r\n\r\nexport default AddTask;","import React, { useState, useEffect } from \"react\";\nimport GlobalStyles from \"./config/GlobalStyles\";\nimport Header from \"./Components/Header\";\nimport useAuth from \"./services/firebase/useAuth\";\nimport useTasks from \"./services/firebase/useTasks\";\nimport firebase from \"firebase/app\";\nimport 'firebase/auth'; \nimport 'firebase/firestore';\nimport firebaseConfig from \"./config/firebase\";  \n\nimport { Switch, Route, useLocation, Redirect, useHistory } from \"react-router-dom\";\n\nimport Login from \"./Views/Login\";\n\nimport MainMenu from \"./Views/MainMenu\";\nimport MyTasks from \"./Views/MyTasks\";\nimport MyMind from \"./Views/MyMind\";\nimport TasksDone from \"./Views/TasksDone\";\nimport AddTask from \"./Views/AddTask\";\n\n\nfunction Protected({ authenticated, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        authenticated ? (\n          children\n        ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n\nfunction App() {\n\n  const location = useLocation();\n\n\n\n  if (firebase.apps.length === 0) {\n    firebase.initializeApp(firebaseConfig);\n\n  }\n\n  const { isAuthenticated, createEmailUser, user, signOut, signInWithEmail, signInWithProvider } = useAuth(firebase.auth);\n  const {createTask} = useTasks(firebase.firestore);\n\n  const history = useHistory();\n\n  const handleClick = e => {\n    setMenuOpen(!menuOpen);\n  };\n\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push('/');\n      return;\n    }\n    return;\n  }, [isAuthenticated])\n\n  return (\n    <div>\n      {location.pathname !== \"/login\" && location.pathname !== \"/register\" && (\n        <Header onClick={handleClick} signOut={signOut} user={user} />\n      )}\n\n      <GlobalStyles />\n      <div>\n        <Switch>\n        <Protected authenticated={isAuthenticated} exact path=\"/\">\n            <MainMenu user={user} />\n          </Protected>\n          <Route path=\"/login\">\n            <Login signInWithEmail={signInWithEmail} signInWithProvider={signInWithProvider} />\n          </Route>\n          <Protected authenticated={isAuthenticated} path=\"/mytasks\">\n            <MyTasks  user={user}/>\n          </Protected>\n          <Protected authenticated={isAuthenticated} path=\"/mymind\">\n            <MyMind />\n          </Protected>\n          <Protected authenticated={isAuthenticated} path=\"/tasksdone\">\n            <TasksDone user={user} />\n          </Protected>\n          <Protected authenticated={isAuthenticated} path=\"/addtask\">\n            <AddTask createTask = {createTask} user={user}/>\n          </Protected>\n        </Switch>\n      </div>\n    </div>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}